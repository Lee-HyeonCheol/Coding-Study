#include <bits/stdc++.h>
using namespace std ;

int dy[6] = { 0, -1, -1, 0, 1, 1 };
int dx[6] = { -1, 0, 1, 1, 0, -1 };

int N, res;
char input[50][50];
int board[50][50];

bool is_in_range(int y, int x) {
	return y >= 0 && y < N && x >= 0 && x < N;
}

int dfs(int y, int x, int color) {
	board[y][x] = color;
	int nc = color == 1 ? 2 : 1;
	int cnt = color;
	for (int i = 0; i < 6; i++) {
		int cy = y + dy[i];
		int cx = x + dx[i];

		if (is_in_range(cy, cx) && input[cy][cx] == 'X') {
			if (board[cy][cx] == 0)
				cnt = max(cnt, dfs(cy, cx, nc));
			if (board[cy][cx] == color)
				return 3;
		}
	}
	return cnt;
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			cin >> input[i][j];
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			if (input[i][j] == 'X' && board[i][j] == 0)
				res = max(res, dfs(i, j, 1));
	cout << res;
}