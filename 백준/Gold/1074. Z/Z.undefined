#include <bits/stdc++.h>
using namespace std;

int N, r, c;

int solve(int n, int row, int col) {
	if (row == r && col == c)
		return 0;
	int offset = pow(2, n - 1);
	int res = 0;

	if (r >= row && r < row + offset && c >= col && c < col + offset)
		return res + solve(n - 1, row, col);
	res += pow(offset, 2);
	col += offset;

	if (r >= row && r < row + offset && c >= col && c < col + offset)
		return res + solve(n - 1, row, col);
	res += pow(offset, 2);
	row += offset;
	col -= offset;

	if (r >= row && r < row + offset && c >= col && c < col + offset)
		return res + solve(n - 1, row, col);
	res += pow(offset, 2);
	col += offset;

	return res + solve(n - 1, row, col);
}

int main(void) {
	cin >> N >> r >> c;
	cout << solve(N, 0, 0);
}