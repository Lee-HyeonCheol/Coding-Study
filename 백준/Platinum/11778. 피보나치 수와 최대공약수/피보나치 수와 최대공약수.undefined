#include <bits/stdc++.h>
using namespace std;

#define vi vector<int>
#define vvi vector<vi>
typedef long long ll;
const int MOD = 1000000007;
ll N, M;
vvi base = { {1, 1}, {1, 0} };

vvi multiplyMatrix(vvi a, vvi b) {
	int aR = a.size(), aC = a[0].size();
	int bR = b.size(), bC = b[0].size();

	if (aC != bR)
		return {};
	vvi x(aR, vi(bC, 0));
	for (int i = 0; i < aR; i++)
		for (int j = 0; j < bC; j++)
			for (int k = 0; k < aC; k++)
				x[i][j] = (x[i][j] + (ll)a[i][k] * b[k][j]) % MOD;
	return x;
}

vvi getMatrix(ll n) {
	if (n == 1)
		return base;
	if (n % 2)
		return multiplyMatrix(getMatrix(n - 1), base);
	vvi x = getMatrix(n / 2);
	return multiplyMatrix(x, x);
}

ll fib(ll n) {
	if (n == 0)
		return 0;
	if (n == 1 || n == 2)
		return 1;
	vvi t = getMatrix(n - 1);
	vvi fibBase = { {1}, {0} };
	vvi x = multiplyMatrix(t, fibBase);

	return x[0][0];
}

ll gcd(ll a, ll b) {
	if (b == 0)
		return a;
	return gcd(b, a % b);
}

int main(void) {
	cin >> N >> M;
	cout << fib(gcd(N, M));
}